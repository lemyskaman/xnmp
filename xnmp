#! /bin/bash 


INSTALL=false

show_help(){
	echo ""
	echo ""
	echo "xnmp [--option1 ...] [--option-with=value ...]"
	echo ""
	echo "all params with (*) are mandatory"
	echo "Options:"
	echo " -i,   --install             Proceed to setup repo and install:"
	echo "                             nginx + php + mariadb. "
	echo ""
	echo "       --setup-repo          Proceed to install sury nginx and php repo with"
	echo "                             the Official Mariadb repositories (ubuntu or debian)."
	echo ""
	echo "       --nginx-install       Install Nginx server."
	echo ""
	echo "       --mariadb-install     Install Mariadb version 10.5."
	echo ""
  echo " -p=,  --php-install=        Install a php version on system with dependencies"
  echo "                             for laravel development, when used the php version"
  echo "                             must be passed as option value."
	echo ""
  echo " -la=, --local-domain-add=   Add a new domain name as entry on your hosts file,"
  echo "                             pointing to 127.0.0.1 (localhost). You must pass"
  echo "                             the domanin name as value for this option"
	echo ""
  echo " -ld=, --local-domain-del=   Remove a domain name entry on your hosts file."
  echo "                             You must pass the domain name as value for this option"
	echo ""
	echo " -fpm=, --fpm-add=           Add a new fpm file to be used."
  echo "                             You must pass the domain name as value for this option"
	echo ""

	return 0
}

#settign the param vars
for i in "$@"
do
case $i in
    -help|--help)
    show_help
    return 0
    shift # past argument=value
    ;;
    -i*|--install*)

    INSTALL=true
    shift # past arg
    ;;
    --setup-repo*)

    SETUP_REPO=true
    shift # past arg
    ;;
    --nginx-install*)

    NGIX_INSTALL=true
    shift # past arg
    ;;
    --mariadb-install*)

    MARIADB_INSTALL=true
    shift # past arg
    ;;
    -php=*|--php-version=*)
    PHP_VERSION="${i#*=}"
    shift # past arg
    ;;
    -p=*|--php-install=*)
    PHP_VERSION_TO_INSTALL="${i#*=}"
    shift # past arg
    ;;
    -la=*|--local-domain-add=*)
    DOMAIN_ADD="${i#*=}"
    shift # past arg
    ;;
    -ld=*|--local-domain-del=*)
    DOMAIN_DEL="${i#*=}"
    shift # past arg
    ;;
    -fpm=*|--fpm-add=*)
    FPM_CREATE_USER="${i#*=}"
    shift # past arg
    ;;
    *)
          # unknown option
    ;;
esac
done


export PHP_VERSION
export LINUX_USER

echo $INSTALL
echo $SETUP_REPO
echo $NGIX_INSTALL
echo $MARIADB_INSTALL
echo $PHP_VERSION_TO_INSTALL
echo $PHP_VERSION
echo $DOMAIN_ADD
echo $DOMAIN_DEL
echo $FPM_CREATE_USER

validate_php_version(){
  PHP_VERSION=""
  valid_php_versions=("8.0" "7.4" "7.3")
  echo "Validating php version: $1"
  echo ""
  export VALUE_SELECTED_FROM_ARGS
  if [[ -n $1 ]];then
   . ./scripts/bash_helpers/in_arguments $1 "${valid_php_versions[@]}"
  else
   . ./scripts/bash_helpers/in_arguments "x.x" "${valid_php_versions[@]}"
  fi
  export PHP_VERSION=$VALUE_SELECTED_FROM_ARGS
}

validate_user(){
  LINUX_USER=""
  valid_users=( $(cat /etc/passwd | cut -d: -f1) )

  echo "Validating linux user: $1"
  echo ""
  export VALUE_SELECTED_FROM_ARGS
  if [[ -n $1 ]];then
   . ./scripts/bash_helpers/in_arguments $1 "${valid_users[@]}"
  else
   . ./scripts/bash_helpers/in_arguments "unspecified" "${validvalid_users[@]}"
  fi
  export LINUX_USER=$VALUE_SELECTED_FROM_ARGS

}

restart_php(){
  echo "Restarting php fpm..."
	sudo systemctl restart php$1-fpm
}

export DETECTED_VALID_DISTRO_NAME
export DETECTED_VALID_DISTRO_VERSION
repo_setup(){
	. ./scripts/bash_helpers/detect_valid_linux_distro_name     Ubuntu

	#ubuntu
	if [[ $DETECTED_VALID_DISTRO_NAME == Ubuntu ]]; then
	. ./scripts/bash_helpers/detect_valid_linux_distro_version  18.04 20.04
		if [[ $DETECTED_VALID_DISTRO_VERSION == "18.04" ||  $DETECTED_VALID_DISTRO_VERSION == "20.04" ]]; then
			echo  "Ondrej nginx-mainline, and Ondrej php and ppa repo will be added "
			read -p "Are you sure to continue? [Y/n] " -n 1 -r
			echo ""
			if [[ $REPLY =~ ^[Yy]$ ]];then
				echo "Installing needed packages"
				sudo apt install -y curl wget gnupg2 ca-certificates lsb-release apt-transport-https

				echo "Adding the ondre nginx repository "
				sudo add-apt-repository ppa:ondrej/nginx-mainline
				echo "Adding the Ondre php repository to your system."
				sudo add-apt-repository ppa:ondrej/php

			fi
			echo  "Mariadb source reposiitory will be added"
			read -p "Are you sure to continue? [Y/n] " -n 1 -r
			echo ""
			if [[ $REPLY =~ ^[Yy]$ ]];then
				sudo apt-get install software-properties-common
				sudo apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'
				sudo add-apt-repository 'deb [arch=amd64,arm64,ppc64el] http://sfo1.mirrors.digitalocean.com/mariadb/repo/10.5/ubuntu focal main'
			fi
		fi
	fi
}

install_nginx(){
	sudo apt install nginx
}

install_mariadb(){
	sudo apt install mariadb-server sqlite3
}

install_php(){
	
	validate_php_version $PHP_VERSION_TO_INSTALL
	sudo apt install git-all sqlite3 nodejs npm php$PHP_VERSION-{fpm,sqlite3,mysql,xml,xmlrpc,curl,gd,imagick,cli,dev,imap,mbstring,opcache,soap,zip,intl,bcmath,bz2,xdebug,ctype,gmp,bcmath,dev} php$PHP_VERSION -y

}

add_domain_to_local(){
	. ./scripts/hosts_file_manager add 127.0.0.1 $1
}

remove_domain_to_local(){
	. ./scripts/hosts_file_manager remove 127.0.0.1 $1
}



create_fpm_for_user(){
  LINUX_USER=$1
  PHP_VERSION=$2
  validate_user $LINUX_USER
  VALUE_SELECTED_FROM_ARGS="undefined"
  validate_php_version $PHP_VERSION


  FILE_PATH=/etc/php/$PHP_VERSION/fpm/$LINUX_USER.conf
  echo "$FILE_PATH"
	if [[ "$1" == *"phpmyadmin"* ]]; then
  	echo "It seams you are triying to set a new fpm for a phpmyadmin instance, a new fpm will be created from a phpmyadmin config template"
  	sudo ./templates/fpm_phpmyadmin.template $LINUX_USER >> $FILE_PATH
	else
    sudo ./templates/fpm_general.template $LINUX_USER >> FILE_PATH
	fi
	echo "Fpm file has been create: "
	echo "$FILE_PATH"
	echo " "
  restart_php $PHP_VERSION
}

remove_fpm_for_user(){
FILE_PATH=/etc/php/$2/fpm/$1.conf
	if [[ -f  $FILE_PATH ]]; then
    echo "Removing Fpm file"
    sudo rm "$FILE_PATH";
	else
    echo "$FILE_PATH does not exists"
	fi


}

if [[ $INSTALL == true ]] ; then
	echo "You've choose install"
	repo_setup
	install_nginx
	install_mariadb
	install_php
else

	if [[  $SETUP_REPO != true && 
		   $SETUP_REPO  != true && 
		   $NGIX_INSTALL  != true && 
		   $MARIADB_INSTALL  != true && 
		   -z $PHP_VERSION_TO_INSTALL &&
		   -z $DOMAIN_ADD &&
		   -z $DOMAIN_DEL &&
		   -z $FPM_CREATE_USER

	]]; then 
		show_help
	else
		if [[ -n $PHP_VERSION ]]; then
			validate_php_version $PHP_VERSION
		fi
		if [[ $SETUP_REPO == true ]]; then 
			repo_setup
		fi

		if [[ $NGIX_INSTALL == true ]]; then 
			install_nginx
		fi

		if [[ $MARIADB_INSTALL == true ]]; then 
			install_mariadb
		fi

		if [[ -n $PHP_VERSION_TO_INSTALL ]]; then
			install_php
		fi
		
		if [[ -n $DOMAIN_ADD ]]; then 
			add_domain_to_local $DOMAIN_ADD
		fi
		if [[ -n $DOMAIN_DEL ]]; then 
			remove_domain_to_local $DOMAIN_DEL
		fi

		if [[ -n $FPM_CREATE_USER ]]; then

		  create_fpm_for_user $FPM_CREATE_USER $PHP_VERSION
		fi
	fi

fi






